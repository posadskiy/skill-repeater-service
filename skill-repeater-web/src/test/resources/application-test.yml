#tag::micronaut[]
micronaut:
  application:
    name: skill-repeater-service
  server:
    port: 8210
    cors:
      enabled: true
      configurations:
        ui:
          allowed-origins:
            - http://localhost:3000
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
  security:
    authentication: bearer
    token:
      jwt:
        signatures:
          secret:
            generator:
              secret: "test-jwt-secret"
        generator:
          refresh-token:
            enabled: true
            secret: "test-jwt-secret"
      generator:
        access-token:
          expiration: 1800
    intercept-url-map:
      - pattern: /swagger/**
        access:
          - isAnonymous()
      - pattern: /swagger-ui/**
        access:
          - isAnonymous()
      - pattern: /openapi/**
        access:
          - isAnonymous()
      - pattern: /prometheus
        access:
          - isAnonymous()
#end::micronaut[]

#tag::database[]
datasources:
  default:
    url: "jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE"
    username: "test"
    password: "test"
    driver-class-name: org.h2.Driver
    schema-generate: CREATE_DROP
    dialect: H2
flyway:
  datasources:
    default:
      enabled: false
#end::database[]

#tag::jaeger[]
tracing:
  jaeger:
    enabled: false
#end::jaeger[]

#tag::prometheus[]
endpoints:
  prometheus:
    enabled: true
    path: /prometheus
    descriptions: true
    step: PT1M
    prefix: skill_repeater_
    common-tags:
      application: skill-repeater-service
      environment: test

metrics:
  export:
    prometheus:
      enabled: true
      descriptions: true
      step: PT1M
      prefix: skill_repeater_
      common-tags:
        application: skill-repeater-service
        environment: test

  binders:
    jvm: true
    processor: true
    files: true
    logback: true
    uptime: true
    thread: true
    classloader: true
    hikaricp: true
    http-client: true
    http-server: true
#end::prometheus[] 
